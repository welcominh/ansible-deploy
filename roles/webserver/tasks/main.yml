---
- include: structure.yml

# Copy shared files from existing source if they dont already exist
- name: Add parameters.yml in shared directory
  shell: mkdir -p {{ deploy_to_root }}/shared/app/config && cp {{ parameters_file_path_input }} {{ deploy_to_root }}/shared/app/config
  when: parameters_yml.stat.exists == false
- name: Add megasearch_similar_url.txt in shared directory
  shell: mkdir -p {{ deploy_to_root }}/shared/web && cp {{ megasearch_similar_url_file_path_input }} {{ deploy_to_root }}/shared/web
  when: megasearch_similar_url_txt.stat.exists == false
- pause:

# Start deploy process !!!
- name: Get release timestamp
  command: date +%Y-%m-%d_%H.%M.%S
  register: timestamp

- name: Checkout git repo into release directory
  git:
    repo: "{{ repo_url }}"
    dest: "{{ deploy_to }}/releases/{{ timestamp.stdout }}"
    version: master

# Permissions
- include: permissions.yml

- name: Bootstrap release
  shell: cd {{ deploy_to }}/releases/{{ timestamp.stdout }} && bin/bootstrap --no-interaction
  register: bootstrap_output
- debug: var=bootstrap_output.stdout_lines
- name: Clear cache
  shell: cd {{ deploy_to }}/releases/{{ timestamp.stdout }} && rm -rf app/cache/*

# Permissions
- include: permissions.yml


# Symlink shared files
- name: Delete release files to replace them by shared files
  file:
    state: absent
    path: "{{ deploy_to }}/releases/{{ timestamp.stdout }}/{{ item }}"
  with_items: linked_files

- name: Symlink of shared files
  file:
    state: link
    src: "{{ deploy_to_root }}/shared/{{ item }}"
    dest: "{{ deploy_to }}/releases/{{ timestamp.stdout }}/{{ item }}"
  with_items: linked_files


# Symlink of the release
- name: Create current symlink
  file:
    state: link
    src: "{{ deploy_to }}/releases/{{ timestamp.stdout }}"
    dest: "{{ deploy_to }}/current"


- name: Clean releases
  when: keep_releases > 0
  shell: cd {{ deploy_to }}/releases && ls -1r | tail -n +$(({{ keep_releases }} + 1)) | xargs rm -rf